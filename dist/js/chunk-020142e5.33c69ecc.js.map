{"version":3,"sources":["webpack:///./src/service/demand_service.js"],"names":["selection","cccWebConfigs","address","rpcurl","gas","cccConfigs","cccWebConfig","cccConfig","getTokenValue","tokenAmount","tokenValue","value","parseInt","token","tokenId","tokenContract","tokenType","tokenAddress","getCurrentProvider","async","window","ethereum","web3Provider","providers","Web3Provider","provider","JsonRpcProvider","cccContract","signer","getSigner","contract","Contract","abi","approve","receipt","wait","console","log","error","cccWebContract","protocolDetail","id","result","a","get","detailProtocol","data","success","createDemandContract","demand","userAccount","localStorage","getItem","utf8Bytes","utils","toUtf8Bytes","JSON","stringify","demandBytes","hexlify","createDemand","info","hash","$message","demandDetail","detailDemand","endDemandContract","demandAddress","endDemand","addCandidateContract","protocolId","ipfsUrl","protocolData","ipfsUrlBytes","addCandidate","candidate"],"mappings":"kHAAA,mPAOA,IAAIA,EAAY,EAIdA,EAAY,EAGd,MAAMC,EAAgB,CACpB,CACEC,QAAS,6CACTC,OAAQ,+DACRC,IAAK,KAEP,CACEF,QAAS,6CACTC,OAAQ,+DACRC,IAAK,MAIHC,EAAa,CACjB,CACEH,QAAS,8CAEX,CACEA,QAAS,+CAIPI,EAAe,IAAML,EAAcD,GAEnCO,EAAY,IAAMF,EAAWL,GAEnC,SAASQ,EAAcC,GACrB,MAAMC,EAAa,CACjBC,MAAOC,SAASH,GAChBI,MAAO,CACLC,QAAS,MACTC,cAAe,CAAEC,UAAW,EAAGC,aAAcV,IAAYL,WAG7D,OAAOQ,EAGT,MAAMQ,EAAqBC,UACzB,GAA+B,qBAApBC,OAAOC,SAA0B,CAC1C,MAAMC,EAAe,IAAI,OAAOC,UAAUC,aAAaJ,OAAOC,UAC9D,OAAOC,EACF,CACL,MAAMG,EAAW,IAAI,OAAOF,UAAUG,gBACpCpB,IAAeH,QAEjB,OAAOsB,IAILE,EAAcR,UAClB,MAAMM,QAAiBP,IAEjBU,EAASH,EAASI,YAElBC,EAAW,IAAI,OAAOC,SAC1BxB,IAAYL,QACZ,EAAQ8B,IACRJ,GAEF,OAAOE,GAGHG,EAAUd,MAAOV,IACrB,IACE,MAAMqB,QAAiBH,IACjBO,QAAgBJ,EAASG,QAAQ3B,IAAeJ,QAASO,SACzDyB,EAAQC,OAEdC,QAAQC,IAAI,+BAAgCH,GAC5C,MAAOI,GACPF,QAAQE,MAAM,6BAA8BA,KAI1CC,EAAiBpB,UACrB,MAAMM,QAAiBP,IAEjBU,EAASH,EAASI,YAElBC,EAAW,IAAI,OAAOC,SAC1BzB,IAAeJ,QACf,EAAW8B,IACXJ,GAEF,OAAOE,GAGHU,EAAiBrB,MAAOsB,IAC5B,MAAMC,QAAe,EAAAC,EAAMC,IAAO,OAAOC,eAAV,OAAiCJ,GAChE,OAAIC,EAAOI,KAAKC,QACPL,EAAOI,KAAKA,KAEZ,MAILE,EAAuB7B,MAAO8B,IAClC,IAAIC,EAAcC,aAAaC,QAAQ,YACnC1C,EAAaF,EAAcyC,EAAOxC,aAEtC,MAAM4C,EAAY,OAAOC,MAAMC,YAAYC,KAAKC,UAAUR,IAEpDS,EAAc,OAAOJ,MAAMK,QAAQN,GACzC,IACE,MAAMvB,QAAiBS,IACjBL,QAAgBJ,EAAS8B,aAC7BV,EACAxC,EACAgD,GAGF,OADAtB,QAAQyB,KAAK,mBAAqB3B,EAAQ4B,MACnC5B,EAAQ4B,KACf,MAAOxB,GAGP,YADA,GAAKyB,SAASzB,MAAM,8BAA4BA,GACzC,OAKL0B,EAAe7C,MAAOW,IAC1B,MAAMY,QAAe,EAAAC,EAAMC,IAAO,OAAOqB,aAAV,aAAqCnC,GACpE,OAAIY,EAAOI,KAAKC,QACPL,EAAOI,KAAKA,KAEZ,MAILoB,EAAoB/C,MAAOgD,EAAe1D,KAC9C,IAAIyC,EAAcC,aAAaC,QAAQ,YACnC1C,EAAaF,EAAcC,GAC/B,IACE,MAAMqB,QAAiBS,IACjBL,QAAgBJ,EAASsC,UAC7BD,EACAjB,EACAxC,GAGF,OADA0B,QAAQyB,KAAK,6BAA+B3B,EAAQ4B,MAC7C5B,EAAQ4B,KACf,MAAOxB,GAGP,OADAF,QAAQE,MAAM,2BAAyBA,GAChC,OAKL+B,EAAuBlD,MAAOmD,EAAYC,KAC9C,IACE,MAAMzC,QAAiBS,IACjBiC,QAAqBhC,EAAe8B,GAGpCjB,EAAY,OAAOC,MAAMC,YAAYgB,GAErCE,EAAe,OAAOnB,MAAMK,QAAQN,GACpCnB,QAAgBJ,EAAS4C,aAC7BF,EAAa1C,SACb0C,EAAaG,UACbF,EACAH,GAGF,OADAlC,QAAQyB,KAAK,gCAAkC3B,EAAQ4B,MAChD5B,EAAQ4B,KACf,MAAOxB,GAGP,OADAF,QAAQE,MAAM,8BAA4BA,GACnC,Q","file":"js/chunk-020142e5.33c69ecc.js","sourcesContent":["import { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport CCCJson from \"./contracts/CCC.json\";\nimport CCCWebJson from \"./contracts/CCCWeb.json\";\n\nimport { reqUrl } from \"@/api/apiUrl\";\n\nlet selection = 0; // 默认选择第一个配置\n\nif (process.env.NODE_ENV === \"production\") {\n  // 如果是线上环境，选择不同的配置\n  selection = 1; // 选择第二个配置\n}\n\nconst cccWebConfigs = [\n  {\n    address: \"0x5F19a5Bd51517329a99a3BaC59cBe8acEdd7113d\",\n    rpcurl: \"https://goerli.infura.io/v3/d445a41d8182464696de9e9c91db3776\",\n    gas: 3000000,\n  },\n  {\n    address: \"0x5F19a5Bd51517329a99a3BaC59cBe8acEdd7113d\", // 添加线上环境的配置\n    rpcurl: \"https://goerli.infura.io/v3/d445a41d8182464696de9e9c91db3776\", // 添加线上环境的RPC URL\n    gas: 3000000, // 添加线上环境的gas限制\n  },\n];\n\nconst cccConfigs = [\n  {\n    address: \"0x1c3D6826624Fe9B22C13CF7afBc9eee78bc095CE\",\n  },\n  {\n    address: \"0x1c3D6826624Fe9B22C13CF7afBc9eee78bc095CE\", // 添加线上环境的配置\n  },\n];\n\nconst cccWebConfig = () => cccWebConfigs[selection];\n\nconst cccConfig = () => cccConfigs[selection];\n\nfunction getTokenValue(tokenAmount) {\n  const tokenValue = {\n    value: parseInt(tokenAmount),\n    token: {\n      tokenId: 12345,\n      tokenContract: { tokenType: 1, tokenAddress: cccConfig().address },\n    },\n  };\n  return tokenValue;\n}\n\nconst getCurrentProvider = async () => {\n  if (typeof window.ethereum !== \"undefined\") {\n    const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n    return web3Provider;\n  } else {\n    const provider = new ethers.providers.JsonRpcProvider(\n      cccWebConfig().rpcurl\n    );\n    return provider;\n  }\n};\n\nconst cccContract = async () => {\n  const provider = await getCurrentProvider();\n  // 导入签名\n  const signer = provider.getSigner();\n  // 获取合约，参数：contractAddress、contractABI、signer\n  const contract = new ethers.Contract(\n    cccConfig().address,\n    CCCJson.abi,\n    signer\n  );\n  return contract;\n};\n\nconst approve = async (tokenAmount) => {\n  try {\n    const contract = await cccContract();\n    const receipt = await contract.approve(cccWebConfig().address, tokenAmount);\n    await receipt.wait();\n\n    console.log(\"approve Transaction Receipt:\", receipt);\n  } catch (error) {\n    console.error(\"approve Transaction Error:\", error);\n  }\n};\n\nconst cccWebContract = async () => {\n  const provider = await getCurrentProvider();\n  // 导入签名\n  const signer = provider.getSigner();\n  // 获取合约，参数：contractAddress、contractABI、signer\n  const contract = new ethers.Contract(\n    cccWebConfig().address,\n    CCCWebJson.abi,\n    signer\n  );\n  return contract;\n};\n\nconst protocolDetail = async (id) => {\n  const result = await axios.get(`${reqUrl.detailProtocol}?id=` + id);\n  if (result.data.success) {\n    return result.data.data;\n  } else {\n    return null;\n  }\n};\n\nconst createDemandContract = async (demand) => {\n  var userAccount = localStorage.getItem(\"userName\");\n  var tokenValue = getTokenValue(demand.tokenAmount);\n  // 将字符串转换为 UTF-8 编码的字节数组\n  const utf8Bytes = ethers.utils.toUtf8Bytes(JSON.stringify(demand));\n  // 将字节数组转换为十六进制字符串\n  const demandBytes = ethers.utils.hexlify(utf8Bytes);\n  try {\n    const contract = await cccWebContract();\n    const receipt = await contract.createDemand(\n      userAccount,\n      tokenValue,\n      demandBytes\n    );\n    console.info(\"transactionHash:\" + receipt.hash);\n    return receipt.hash;\n  } catch (error) {\n    // 告诉用户合约失败了\n    this.$message.error(\"createDemand error----->\", error);\n    return null;\n  }\n};\n\n// 结束操作\nconst demandDetail = async (contract) => {\n  const result = await axios.get(`${reqUrl.detailDemand}?contract=` + contract);\n  if (result.data.success) {\n    return result.data.data;\n  } else {\n    return null;\n  }\n};\n\nconst endDemandContract = async (demandAddress, tokenAmount) => {\n  var userAccount = localStorage.getItem(\"userName\");\n  var tokenValue = getTokenValue(tokenAmount);\n  try {\n    const contract = await cccWebContract();\n    const receipt = await contract.endDemand(\n      demandAddress,\n      userAccount,\n      tokenValue\n    );\n    console.info(\"endDemand transactionHash:\" + receipt.hash);\n    return receipt.hash;\n  } catch (error) {\n    // 告诉用户合约失败了\n    console.error(\"endDemand error----->\", error);\n    return null;\n  }\n};\n\n// 接收邀请操作连接合约\nconst addCandidateContract = async (protocolId, ipfsUrl) => {\n  try {\n    const contract = await cccWebContract();\n    const protocolData = await protocolDetail(protocolId);\n\n    // 将字符串转换为 UTF-8 编码的字节数组\n    const utf8Bytes = ethers.utils.toUtf8Bytes(ipfsUrl);\n    // 将字节数组转换为十六进制字符串\n    const ipfsUrlBytes = ethers.utils.hexlify(utf8Bytes);\n    const receipt = await contract.addCandidate(\n      protocolData.contract,\n      protocolData.candidate,\n      ipfsUrlBytes,\n      protocolId\n    );\n    console.info(\"addCandidate transactionHash:\" + receipt.hash);\n    return receipt.hash;\n  } catch (error) {\n    // 告诉用户合约失败了\n    console.error(\"addCandidate error----->\", error);\n    return null;\n  }\n};\nexport {\n  approve,\n  createDemandContract,\n  demandDetail,\n  endDemandContract,\n  addCandidateContract,\n};\n"],"sourceRoot":""}