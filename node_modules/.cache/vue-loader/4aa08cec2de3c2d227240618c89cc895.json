{"remainingRequest":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/src/views/PersonalCenter/CandidateProfile/Register.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/src/views/PersonalCenter/CandidateProfile/Register.vue","mtime":1699863015000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";AAyfile":"Register.vue","sourceRoot":"src/views/PersonalCenter/CandidateProfile","sourcesContent":["<template>\n  <div class=\"demand_new_list\">\n    <el-form\n      :model=\"ruleForm\"\n      :rules=\"rules\"\n      ref=\"ruleForm\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item prop=\"qualification\">\n        <div slot=\"label\" class=\"form_item_label\">\n          <img src=\"@/assets/xueli.png\" alt=\"\" />\n          Qualification\n        </div>\n        <el-cascader\n          v-model=\"ruleForm.qualification\"\n          :options=\"ruleForm.optionQualification\"\n          placeholder=\"Please select your Degree\"\n        ></el-cascader>\n      </el-form-item>\n      <el-form-item prop=\"gender\">\n        <div slot=\"label\" class=\"form_item_label\">\n          <img src=\"@/assets/xingbie.png\" alt=\"\" />\n          Gender\n        </div>\n        <el-select\n          v-model=\"ruleForm.gender\"\n          placeholder=\"Please select your Gender\"\n        >\n          <el-option\n            v-for=\"item in ruleForm.optionsGender\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          >\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item prop=\"age\">\n        <div slot=\"label\" class=\"form_item_label\">\n          <img src=\"@/assets/age.png\" alt=\"\" />\n          Age\n        </div>\n        <el-input\n          v-model=\"ruleForm.age\"\n          placeholder=\"Please enter Age\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item prop=\"twitter\">\n        <span slot=\"label\">\n          <i class=\"iconfont icon-birdxiaoniao\" style=\"color: #44a6ff\"></i>\n          Twitter</span\n        >\n        <div class=\"demand_new_input_twitter\">\n          https://twitter.com/\n          <el-input\n            v-model=\"ruleForm.twitter\"\n            placeholder=\"Please enter Twitter\"\n          ></el-input>\n        </div>\n      </el-form-item>\n      <el-form-item prop=\"telegram\">\n        <span slot=\"label\">\n          <i class=\"iconfont icon-telegram-plane\" style=\"color: #44a6ff\"></i>\n          Telegram</span\n        >\n        <div class=\"demand_new_input_twitter\">\n          https://t.me/\n          <el-input\n            v-model=\"ruleForm.telegram\"\n            placeholder=\"Please enter Telegram\"\n          ></el-input>\n        </div>\n      </el-form-item>\n      <el-form-item prop=\"description\">\n        <span slot=\"label\">\n          <i class=\"iconfont icon-describe\" style=\"font-size: 19px\"></i>\n          Description</span\n        >\n        <el-input\n          type=\"textarea\"\n          v-model=\"ruleForm.description\"\n          placeholder=\"Please enter Description\"\n        ></el-input>\n      </el-form-item>\n\n      <div class=\"ruleForm_footer\">\n        <el-form-item>\n          <el-button type=\"info\" @click=\"submitForm('ruleForm')\"\n            >Submit</el-button\n          >\n          <el-button @click=\"resetForm('ruleForm')\" type=\"success\"\n            >Empty</el-button\n          >\n        </el-form-item>\n      </div>\n\n      <div class=\"el-form_tip_skills\">\n        <p style=\"color: #f56c6c\">Tip: You can add extra skills</p>\n\n        <el-form-item prop=\"skills\">\n          <span slot=\"label\">\n            <i class=\"iconfont icon-guanli01\" style=\"font-size: 19px\"></i>\n            Skills</span\n          >\n          <el-collapse accordion>\n            <el-collapse-item title=\"Increase skills\">\n              <el-checkbox-group v-model=\"ruleForm.skills\">\n                <el-checkbox\n                  v-for=\"(item, i) in ruleForm.skillsList\"\n                  :label=\"item.label\"\n                  :key=\"i\"\n                  :value=\"item.value\"\n                ></el-checkbox>\n              </el-checkbox-group>\n\n              <div class=\"el-collapse-el-button\">\n                <el-button type=\"info\" @click=\"handleConfirmSkills\"\n                  >Confirm new addition</el-button\n                >\n              </div>\n            </el-collapse-item>\n          </el-collapse>\n        </el-form-item>\n\n        <el-form-item prop=\"skills\">\n          <span slot=\"label\"> Already added Skills</span>\n          <el-collapse accordion>\n            <el-collapse-item\n              title=\"Already added Skills（Select the skill you want to remove）\"\n            >\n              <el-radio\n                v-model=\"ruleForm.skillsDetail\"\n                v-for=\"(item, i) in ruleForm.skillsListDetail\"\n                :label=\"item.skill\"\n                :key=\"i\"\n                :value=\"item.skill.id\"\n                @change=\"handleChange(item.id)\"\n              ></el-radio>\n\n              <div class=\"el-collapse-el-button\">\n                <el-button type=\"info\" @click=\"handleDeleteSkills\"\n                  >Delete Skills</el-button\n                >\n              </div>\n            </el-collapse-item>\n          </el-collapse>\n        </el-form-item>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { reqUrl } from \"@/api/apiUrl\";\nimport { requestGet, request } from \"@/api/request\";\nimport { showLoading, hideLoading } from \"@/util/loading\";\n\nimport { QualificationData } from \"@/data/qualification.js\";\nimport { SkillsData } from \"@/data/skills.js\";\n\nexport default {\n  inject: [\"reload\"],\n  data() {\n    return {\n      ruleForm: {\n        qualification: \"\",\n        category: \"\",\n        optionQualification: [],\n        gender: \"\",\n        optionsGender: [\n          { label: \"male\", value: \"male\" },\n          { label: \"female\", value: \"female\" },\n        ],\n        age: \"\",\n        twitter: \"\",\n        telegram: \"\",\n        description: \"\",\n        skills: [],\n        skillsList: [],\n        skillsDetail: \"\",\n        skillsDetailId: \"\",\n        skillsListDetail: [],\n      },\n      rules: {\n        qualification: [\n          {\n            required: true,\n            message: \"Please select your Degree\",\n            trigger: \"blur\",\n          },\n        ],\n        gender: [\n          {\n            required: true,\n            message: \"Please select your Gender\",\n            trigger: \"blur\",\n          },\n        ],\n        age: [{ required: true, message: \"Please enter Age\", trigger: \"blur\" }],\n        twitter: [\n          { required: true, message: \"Please enter twitter\", trigger: \"blur\" },\n        ],\n        telegram: [\n          { required: true, message: \"Please enter telegram\", trigger: \"blur\" },\n        ],\n        demandBudget: [\n          {\n            required: true,\n            message: \"Please enter the demand budget\",\n            trigger: \"blur\",\n          },\n        ],\n        description: [\n          {\n            required: true,\n            message: \"Please enter Description\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  mounted() {\n    this.ruleForm.optionQualification = QualificationData;\n    this.ruleForm.skillsList = SkillsData;\n\n    showLoading();\n    const opt = {\n      url: reqUrl.candidateDetail,\n      params: {\n        user: localStorage.getItem(\"userName\"),\n      },\n      resFunc: (res) => {\n        if (res.data.errno == 0) {\n          if (res.data.data) {\n            this.ruleForm.skillsListDetail = res.data.data.skills;\n            this.ruleForm.qualification = res.data.data.qualification;\n            this.ruleForm.gender = res.data.data.gender;\n            this.ruleForm.age = res.data.data.age;\n            this.ruleForm.telegram = res.data.data.telegram;\n            this.ruleForm.twitter = res.data.data.twitter;\n            this.ruleForm.description = res.data.data.description;\n          }\n        }\n        if (res.data.errno != 0) {\n          this.$notify.error({\n            title: \"error\",\n            message: res.data.message,\n          });\n          hideLoading();\n        }\n        hideLoading();\n      },\n      errFunc: (err) => {\n        this.$notify.error({\n          title: \"error\",\n          message: err,\n        });\n        console.log(err, \"err1\");\n        hideLoading();\n      },\n    };\n    requestGet(opt);\n  },\n\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.$confirm(\n            \"Please confirm that the information is correct, and then continue\",\n            \"Tips\",\n            {\n              confirmButtonText: \"Confirm\",\n              cancelButtonText: \"Cancel\",\n              type: \"warning\",\n            }\n          )\n            .then(() => {\n              showLoading();\n              const opt = {\n                url: reqUrl.registerCandidat,\n                method: \"POST\",\n                params: {\n                  qualification: this.ruleForm.qualification[0],\n                  gender: this.ruleForm.gender,\n                  age: this.ruleForm.age,\n                  twitter: this.ruleForm.twitter,\n                  telegram: this.ruleForm.telegram,\n                  description: this.ruleForm.description,\n                },\n                resFunc: (res) => {\n                  console.log(res.data);\n                  if (res.data.errno == 0) {\n                    this.$message.success(\"Register Successfully\");\n                    this.refresh();\n                  }\n                  if (res.data.errno != 0) {\n                    this.$notify.error({\n                      title: \"error\",\n                      message: res.data.message,\n                    });\n                    hideLoading();\n                  }\n                  hideLoading();\n                },\n                errFunc: (err) => {\n                  this.$notify.error({\n                    title: \"error\",\n                    message: err,\n                  });\n                  console.log(err, \"err1\");\n                  hideLoading();\n                },\n              };\n              request(opt);\n            })\n            .catch(() => {\n              this.$message({\n                type: \"info\",\n                message: \"Cancelled operation\",\n              });\n            });\n        } else {\n          this.$message.error(\n            \"Please check whether the information is correct\"\n          );\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n\n    handleConfirmSkills() {\n      this.$confirm(\n        \"Check whether the added skills are correct. If yes, proceed with the operation\",\n        \"Tips\",\n        {\n          confirmButtonText: \"Confirm\",\n          cancelButtonText: \"Cancel\",\n          type: \"warning\",\n        }\n      )\n        .then(() => {\n          showLoading();\n          const opt = {\n            url: reqUrl.addSkillCandidate,\n            method: \"POST\",\n            params: {\n              skills: this.ruleForm.skills,\n            },\n            resFunc: (res) => {\n              console.log(res.data);\n              if (res.data.errno == 0) {\n                this.$message.success(\"Added skill Successfully\");\n                this.refresh();\n              }\n              if (res.data.errno != 0) {\n                this.$notify.error({\n                  title: \"error\",\n                  message: res.data.message,\n                });\n                hideLoading();\n              }\n              hideLoading();\n            },\n            errFunc: (err) => {\n              this.$notify.error({\n                title: \"error\",\n                message: err,\n              });\n              console.log(err, \"err1\");\n              hideLoading();\n            },\n          };\n          request(opt);\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"Cancelled operation\",\n          });\n        });\n    },\n\n    handleChange(val) {\n      this.ruleForm.skillsDetailId = val;\n    },\n\n    handleDeleteSkills() {\n      this.$confirm(\n        \"Are you sure you want to remove the selected skill？\",\n        \"Tips\",\n        {\n          confirmButtonText: \"Confirm\",\n          cancelButtonText: \"Cancel\",\n          type: \"warning\",\n        }\n      )\n        .then(() => {\n          showLoading();\n          const opt = {\n            url: reqUrl.deleteSkillCandidate,\n            method: \"POST\",\n            params: {\n              skill: this.ruleForm.skillsDetail,\n              id: this.ruleForm.skillsDetailId,\n            },\n            resFunc: (res) => {\n              console.log(res.data);\n              if (res.data.errno == 0) {\n                this.$message.success(\"Delete Successfully\");\n                this.refresh();\n              }\n              if (res.data.errno != 0) {\n                this.$notify.error({\n                  title: \"error\",\n                  message: res.data.message,\n                });\n                hideLoading();\n              }\n              hideLoading();\n            },\n            errFunc: (err) => {\n              this.$notify.error({\n                title: \"error\",\n                message: err,\n              });\n              console.log(err, \"err1\");\n              hideLoading();\n            },\n          };\n          request(opt);\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"Cancelled operation\",\n          });\n        });\n    },\n\n    // 刷新\n    refresh() {\n      this.reload();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../index.scss\";\n@import \"../../../Index.scss\";\n.demand_new_list {\n  width: 70%;\n  margin: 0 auto;\n  height: calc(100vh - 120px);\n  overflow-y: scroll;\n\n  .demand_new_input_twitter {\n    display: flex;\n    border: 1px solid #dcdfe6;\n    border-radius: 15px;\n    background: #fff;\n    padding-left: 15px;\n\n    /deep/ .el-input__inner {\n      width: auto;\n      border: none;\n      border-radius: 0px;\n      border-left: 1px #dcdfe6 solid;\n      margin-left: 10px;\n    }\n  }\n}\n</style>\n\n<style>\n@import \"../../../Index.scss\";\n\n.el-select-dropdown__item.hover {\n  border-radius: 10px !important;\n  background: #fbf3ff;\n}\n\n.el-select-dropdown__item.selected,\n.el-cascader-node.in-active-path,\n.el-cascader-node.is-active,\n.el-cascader-node.is-selectable.in-checked-path {\n  color: #be7eee;\n}\n</style>\n"]}]}