{"remainingRequest":"/Users/admin/projects/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/projects/cybercrowdcoin-web/src/views/Home/index.vue?vue&type=style&index=1&id=1d9b105c&lang=css","dependencies":[{"path":"/Users/admin/projects/cybercrowdcoin-web/src/views/Home/index.vue","mtime":1699863176000},{"path":"/Users/admin/projects/cybercrowdcoin-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uL0luZGV4LnNjc3MiOwoKLmVsLXBvcG92ZXItLXBsYWluIHsKICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAoZA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Home","sourcesContent":["<template>\n  <div class=\"home_page\">\n    <div class=\"home_echarts\">\n      <div class=\"echarts_real\">\n        <div style=\"width: 95%; height: 300px\">\n          <div id=\"main\"></div>\n        </div>\n      </div>\n      <div class=\"echarts_real\">\n        <div style=\"width: 95%; height: 300px\">\n          <div id=\"main2\"></div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"h_p_latest\">\n      <div class=\"h_p__title\">\n        <p>Latest Demand</p>\n        <p class=\"h_p__title_line\" @click=\"handleGoPage('Demand')\">\n          View all jobs\n        </p>\n      </div>\n      <div class=\"h_p_latest_cont\" v-if=\"latestDemandList.length > 0\">\n        <div\n          class=\"h_p_latest_child\"\n          v-for=\"(item, index) in latestDemandList\"\n          :key=\"index\"\n        >\n          <div class=\"h_p_latest_child_t\">\n            <el-popover\n              placement=\"top-start\"\n              trigger=\"hover\"\n              :content=\"item.title\"\n            >\n              <p class=\"h_p_latest_child-title\" slot=\"reference\">\n                {{ item.title }}\n              </p>\n            </el-popover>\n            <div class=\"all_demand_content_l_tag-s4\">\n              <span>{{ item.status }}</span>\n            </div>\n          </div>\n          <p>{{ item.budget || 0 }}$</p>\n          <div style=\"display: flex; margin: 10px 0\">\n            <div class=\"all_demand_content_l_tag-s3\">\n              {{ item.category }}\n            </div>\n          </div>\n          <p class=\"h_p_latest_child-description\">\n            <i class=\"iconfont icon-describe\"></i>\n            <el-popover\n              placement=\"top-start\"\n              trigger=\"hover\"\n              :content=\"item.description\"\n            >\n              <span slot=\"reference\">{{ item.description }}</span>\n            </el-popover>\n          </p>\n        </div>\n      </div>\n      <div class=\"nodata\" v-else>\n        <img src=\"@/assets/暂无数据.png\" alt=\"\" />\n        <p>No Datas</p>\n      </div>\n    </div>\n\n    <div class=\"h_p__title\">\n      <p>Latest Candidate</p>\n      <p class=\"h_p__title_line\" @click=\"handleGoPage('Candidate')\">\n        View all Candidate\n      </p>\n    </div>\n    <div class=\"h_p_candidate\" v-if=\"candidateList.length > 0\">\n      <div\n        class=\"h_p_candidate_cont\"\n        v-for=\"(item, i) in candidateList\"\n        :key=\"i\"\n      >\n        <div class=\"h_p_candidate_cont-box\">\n          <el-image\n            style=\"width: 80px; height: 80px; margin-right: 10px\"\n            :src=\"item.gender == 'male' ? manUrl : womanUrl\"\n          >\n          </el-image>\n          <div class=\"h_p_candidate_cont-box-a\">\n            <div class=\"h_p_candidate_cont-box-b\">\n              <p class=\"h_p_candidate_cont-box-c\">{{ item.user }}</p>\n              <i\n                :class=\"\n                  item.gender == 'male'\n                    ? 'iconfont icon-xingbie-nan'\n                    : 'iconfont icon-xingbie-nv'\n                \"\n                :style=\"{\n                  color: item.gender == 'male' ? '#44a6ff' : '#ff33b4',\n                }\"\n              ></i>\n            </div>\n            <div class=\"h_p_candidate_cont-box-b box_margin\">\n              <a :href=\"'https://twitter.com/' + item.twitter\" target=\"_blank\">\n                <i class=\"iconfont icon-birdxiaoniao bird_icon\"></i\n              ></a>\n              <a :href=\"'https://t.me/' + item.telegram\" target=\"_blank\">\n                <i class=\"iconfont icon-telegram-plane bird_icon\"></i\n              ></a>\n            </div>\n            <div style=\"display: flex; margin: 10px 0\">\n              <div class=\"all_demand_content_l_tag-s1\">\n                {{ item.qualification }}\n              </div>\n            </div>\n            <div class=\"dialog_skills_tags\">\n              <div\n                v-for=\"(skill, i) in item.skills\"\n                :key=\"i\"\n                style=\"font-weight: 400; font-size: 15px\"\n              >\n                {{ skill }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <el-button type=\"info\" @click=\"dialogVisibleInvite = true\"\n          >Invite Candidate</el-button\n        >\n\n        <el-dialog :visible.sync=\"dialogVisibleInvite\" width=\"30%\">\n          <div slot=\"title\" class=\"dialog_skills_title\">\n            <i class=\"iconfont icon-a-faqi2\"></i>\n            <span>Invite Candidate</span>\n          </div>\n          <el-input\n            placeholder=\"Please Enter contract\"\n            v-model=\"contractData\"\n          ></el-input>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogVisibleInvite = false\" type=\"success\"\n              >Cancel</el-button\n            >\n            <el-button\n              type=\"info\"\n              @click=\"handleInviteSubmit\"\n              style=\"margin-left: 10px\"\n              >OK</el-button\n            >\n          </div>\n        </el-dialog>\n      </div>\n    </div>\n    <div class=\"nodata\" v-else>\n      <img src=\"@/assets/暂无数据.png\" alt=\"\" />\n      <p>No Datas</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\n\nimport { reqUrl } from \"@/api/apiUrl\";\nimport { requestGet, request } from \"@/api/request\";\nimport { showLoading, hideLoading } from \"@/util/loading\";\n\nexport default {\n  inject: [\"reload\"],\n  data() {\n    return {\n      latestDemandList: [],\n\n      candidateList: [],\n      manUrl: require(\"@/assets/man.png\"),\n      womanUrl: require(\"@/assets/woman.png\"),\n      dialogVisibleInvite: false,\n      contractData: \"\",\n    };\n  },\n  mounted() {\n    showLoading();\n    const opt = {\n      url: reqUrl.homepageListData,\n\n      resFunc: (res) => {\n        console.log(res.data);\n        if (res.data.errno == 0) {\n          var chartDom = document.getElementById(\"main\");\n          const option = {\n            title: {\n              text: \"Demand\",\n              left: \"center\",\n            },\n            tooltip: {\n              trigger: \"item\",\n            },\n            legend: {\n              orient: \"vertical\",\n              left: \"left\",\n            },\n            series: [\n              {\n                name: \"Demand Data\",\n                type: \"pie\",\n                radius: \"50%\",\n                data: res.data.data.demand,\n                emphasis: {\n                  itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: \"rgba(0, 0, 0, 0.5)\",\n                  },\n                },\n              },\n            ],\n          };\n\n          var myChart = echarts.init(chartDom);\n          myChart.setOption(option);\n\n          var chartDom2 = document.getElementById(\"main2\");\n          const option2 = {\n            title: {\n              text: \"Statistics Candidate\",\n              left: \"center\",\n            },\n            tooltip: {\n              trigger: \"item\",\n            },\n            legend: {\n              orient: \"vertical\",\n              left: \"left\",\n            },\n            series: [\n              {\n                name: \"Statistics Candidate\",\n                type: \"pie\",\n                radius: \"50%\",\n                data: res.data.data.candidate,\n                emphasis: {\n                  itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: \"rgba(0, 0, 0, 0.5)\",\n                  },\n                },\n              },\n            ],\n          };\n\n          var myChart = echarts.init(chartDom2);\n          myChart.setOption(option2);\n        }\n        if (res.data.errno != 0) {\n          this.$notify.error({\n            title: \"error\",\n            message: res.data.message,\n          });\n          hideLoading();\n        }\n        hideLoading();\n      },\n      errFunc: (err) => {\n        this.$notify.error({\n          title: \"error\",\n          message: err,\n        });\n        console.log(err, \"err1\");\n        hideLoading();\n      },\n    };\n    requestGet(opt);\n\n    showLoading();\n    const optDemand = {\n      url: reqUrl.allDemandList,\n      params: {\n        pageSize: 3,\n      },\n      resFunc: (res) => {\n        console.log(res.data);\n        if (res.data.errno == 0) {\n          this.latestDemandList = res.data.data.list;\n        }\n        if (res.data.errno != 0) {\n          this.$notify.error({\n            title: \"error\",\n            message: res.data.message,\n          });\n          hideLoading();\n        }\n        hideLoading();\n      },\n      errFunc: (err) => {\n        this.$notify.error({\n          title: \"error\",\n          message: err,\n        });\n        console.log(err, \"err1\");\n        hideLoading();\n      },\n    };\n    requestGet(optDemand);\n\n    showLoading();\n    const optCandidate = {\n      url: reqUrl.allCandidateList,\n      params: {\n        pageSize: 3,\n      },\n      resFunc: (res) => {\n        console.log(res.data);\n        if (res.data.errno == 0) {\n          this.candidateList = res.data.data.list;\n        }\n        if (res.data.errno != 0) {\n          this.$notify.error({\n            title: \"error\",\n            message: res.data.message,\n          });\n          hideLoading();\n        }\n        hideLoading();\n      },\n      errFunc: (err) => {\n        this.$notify.error({\n          title: \"error\",\n          message: err,\n        });\n        console.log(err, \"err1\");\n        hideLoading();\n      },\n    };\n    requestGet(optCandidate);\n  },\n\n  methods: {\n    handleGoPage(type) {\n      if (type == \"Demand\") {\n        this.$router.push(\"/DemandMarket/DemandList\");\n      } else if (type == \"Candidate\") {\n        this.$router.push(\"/DemandMarket/CandidateList\");\n      }\n    },\n\n    handleInviteSubmit() {\n      if (this.contractData !== \"\") {\n        showLoading();\n        const opt = {\n          url: reqUrl.inviteCandidate,\n          method: \"POST\",\n          params: {\n            contract: this.contractData,\n          },\n          resFunc: (res) => {\n            console.log(res.data);\n            if (res.data.errno == 0) {\n              this.$message.success(\"Invitation sent successfully\");\n              this.refresh();\n              this.dialogVisibleInvite = false;\n            }\n            if (res.data.errno != 0) {\n              this.$notify.error({\n                title: \"error\",\n                message: res.data.message,\n              });\n              hideLoading();\n            }\n            hideLoading();\n          },\n          errFunc: (err) => {\n            this.$notify.error({\n              title: \"error\",\n              message: err,\n            });\n            console.log(err, \"err1\");\n            hideLoading();\n          },\n        };\n        request(opt);\n      } else {\n        this.$message.error(\"Please fill in contract\");\n      }\n    },\n\n    // 刷新\n    refresh() {\n      this.reload();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../DemandMarket/index.scss\";\n@import \"./index.scss\";\n\n.all_demand_content_l_tag-s4 {\n  margin-right: 0;\n\n  span {\n    font-weight: 400;\n  }\n}\n</style>\n\n<style>\n@import \"../../Index.scss\";\n\n.el-popover--plain {\n  padding: 5px !important;\n}\n</style>\n"]}]}