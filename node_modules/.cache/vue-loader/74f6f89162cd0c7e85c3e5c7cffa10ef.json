{"remainingRequest":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/src/views/PersonalCenter/CandidateProtocol/ProtocolList.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/src/views/PersonalCenter/CandidateProtocol/ProtocolList.vue","mtime":1702868945000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProtocolList.vue"],"names":[],"mappings":";AA6DA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ProtocolList.vue","sourceRoot":"src/views/PersonalCenter/CandidateProtocol","sourcesContent":["<template>\n  <div class=\"protocol_list\">\n    <div class=\"all_candidate_content\" v-if=\"candidateList.length > 0\">\n      <div\n        v-for=\"(item, i) in candidateList\"\n        :key=\"i\"\n        class=\"all_candidate_content_a\"\n      >\n        <div>\n          <p>Demand Contract：{{ item.contract }}</p>\n          <p>Employer：{{ item.employer }}</p>\n          <p>Candidate：{{ item.candidate }}</p>\n          <p>ActiveDate：{{ item.activeDate }}</p>\n          <div>\n            <i class=\"el-icon-info\" style=\"color: #8b8b8b\"></i>\n            <span style=\"font-weight: 400\">{{ item.status }}</span>\n          </div>\n        </div>\n        <div class=\"all_candidate_content_r_p\">\n          <div v-if=\"item.status == 'invite pending'\">\n            <el-button type=\"info\" @click=\"handleClick(item, 'Accept')\"\n              >Accept</el-button\n            >\n            <el-button type=\"info\" @click=\"handleClick(item, 'Refuse')\"\n              >Refuse</el-button\n            >\n            <el-button type=\"success\" @click=\"handleClick(item, 'Protocol')\"\n              >Protocol Message</el-button\n            >\n          </div>\n          <div v-else-if=\"item.status == 'active'\">\n            <el-button type=\"info\" @click=\"handleClick(item, 'Finish')\"\n              >Finish</el-button\n            >\n            <el-button type=\"success\" @click=\"handleClick(item, 'Protocol')\"\n              >Protocol Message</el-button\n            >\n          </div>\n          <div v-else>\n            <el-button type=\"success\" @click=\"handleClick(item, 'Protocol')\"\n              >Protocol Message</el-button\n            >\n          </div>\n        </div>\n      </div>\n      <Pagination\n        v-show=\"pageLength >= 0\"\n        :limit.sync=\"pageSize\"\n        :total=\"pageLength\"\n        @pagination=\"handlePageChange\"\n        :page-sizes=\"pageSizes\"\n      />\n    </div>\n    <div class=\"nodata\" v-else>\n      <img src=\"@/assets/暂无数据.png\" alt=\"\" />\n      <p>No Datas</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reqUrl } from \"@/api/apiUrl\";\nimport { requestGet, request } from \"@/api/request\";\nimport { showLoading, hideLoading } from \"@/util/loading\";\n\nimport { format_time_date } from \"@/util/universalMethod.js\";\n\nimport Pagination from \"@/component/Pagination\";\n\nexport default {\n  components: {\n    Pagination,\n  },\n  inject: [\"reload\"],\n\n  data() {\n    return {\n      candidateList: [],\n\n      // 分页数据\n      currentPage: 1, // 当前页\n      pageLength: 0,\n      pageSize: 10, //要传过去的数据 每页多少条数据\n      pageSizes: [10, 20, 50, 100, 200],\n    };\n  },\n\n  mounted() {\n    showLoading();\n    const opt = {\n      url: reqUrl.candidateProtocolList,\n      resFunc: (res) => {\n        console.log(res.data);\n        if (res.data.errno == 0) {\n          if (res.data.data.list.length > 0) {\n            this.candidateList = res.data.data.list;\n            this.pageLength = res.data.data.total;\n\n            res.data.data.list.map((item) => {\n              if (item.activeDate != null) {\n                item.activeDate = format_time_date(item.activeDate);\n              }\n            });\n          }\n        }\n        if (res.data.errno != 0) {\n          this.$notify.error({\n            title: \"error\",\n            message: res.data.message,\n          });\n          hideLoading();\n        }\n        hideLoading();\n      },\n      errFunc: (err) => {\n        this.$notify.error({\n          title: \"error\",\n          message: err,\n        });\n        console.log(err, \"err1\");\n        hideLoading();\n      },\n    };\n    requestGet(opt);\n  },\n\n  methods: {\n    handlePageChange(data) {\n      showLoading();\n      const opt = {\n        url: reqUrl.candidateProtocolList,\n        params: {\n          page: data.pageIndex,\n          pageSize: data.pageSize,\n        },\n        resFunc: (res) => {\n          console.log(res.data);\n          if (res.data.errno == 0) {\n            if (res.data.data.list.length > 0) {\n              this.candidateList = res.data.data.list;\n              this.pageLength = res.data.data.total;\n              this.pageSize = data.pageSize;\n              this.currentPage = data.pageIndex;\n\n              res.data.data.list.map((item) => {\n                if (item.activeDate != null) {\n                  item.activeDate = format_time_date(item.activeDate);\n                }\n              });\n            }\n          }\n          if (res.data.errno != 0) {\n            this.$notify.error({\n              title: \"error\",\n              message: res.data.message,\n            });\n            hideLoading();\n          }\n          hideLoading();\n        },\n        errFunc: (err) => {\n          this.$notify.error({\n            title: \"error\",\n            message: err,\n          });\n          console.log(err, \"err1\");\n          hideLoading();\n        },\n      };\n      requestGet(opt);\n    },\n\n    handleClick(item, type) {\n      if (type == \"Accept\") {\n        this.$confirm(\n          \"Are you sure you want to accept the invitation?\",\n          \"Tips\",\n          {\n            confirmButtonText: \"Confirm\",\n            cancelButtonText: \"Cancel\",\n            type: \"warning\",\n          }\n        )\n          .then(() => {\n            showLoading();\n            const opt = {\n              url: reqUrl.acceptInvitationProtocol,\n              method: \"POST\",\n              params: {\n                protocolId: item.id,\n              },\n              resFunc: async (res) => {\n                if (res.data.errno == 0) {\n                  this.$message({\n                    type: \"success\",\n                    message: \"accept invitation success\",\n                  });\n                  this.refresh();\n                }\n                if (res.data.errno != 0) {\n                  this.$notify.error({\n                    title: \"error\",\n                    message:\n                      \"accept invitation failed--------\" + res.data.message,\n                  });\n                  hideLoading();\n                }\n                hideLoading();\n              },\n              errFunc: (err) => {\n                this.$notify.error({\n                  title: \"error\",\n                  message: err,\n                });\n                hideLoading();\n              },\n            };\n            request(opt);\n          })\n          .catch(() => {\n            this.$message({\n              type: \"info\",\n              message: \"Cancelled operation\",\n            });\n          });\n      } else if (type == \"Refuse\") {\n        this.$confirm(\n          \"Are you sure you want to refuse the invitation?\",\n          \"Tips\",\n          {\n            confirmButtonText: \"Confirm\",\n            cancelButtonText: \"Cancel\",\n            type: \"warning\",\n          }\n        )\n          .then(() => {\n            showLoading();\n            const opt = {\n              url: reqUrl.refuseInvitationProtocol,\n              method: \"POST\",\n              params: {\n                protocolId: item.id,\n              },\n              resFunc: (res) => {\n                if (res.data.errno == 0) {\n                  this.$message({\n                    type: \"success\",\n                    message: \"refuse invitation success\",\n                  });\n                  this.refresh();\n                }\n                if (res.data.errno != 0) {\n                  this.$notify.error({\n                    title: \"error\",\n                    message:\n                      \"refuse invitation failed--------\" + res.data.message,\n                  });\n                  hideLoading();\n                }\n                hideLoading();\n              },\n              errFunc: (err) => {\n                this.$notify.error({\n                  title: \"error\",\n                  message: err,\n                });\n                hideLoading();\n              },\n            };\n            request(opt);\n          })\n          .catch(() => {\n            this.$message({\n              type: \"info\",\n              message: \"Cancelled operation\",\n            });\n          });\n      } else if (type == \"Finish\") {\n        this.$confirm(\n          \"Are you sure you want to finish protocol the invitation?\",\n          \"Tips\",\n          {\n            confirmButtonText: \"Confirm\",\n            cancelButtonText: \"Cancel\",\n            type: \"warning\",\n          }\n        )\n          .then(() => {\n            showLoading();\n            const opt = {\n              url: reqUrl.finishProtocol,\n              method: \"POST\",\n              params: {\n                protocolId: item.id,\n              },\n              resFunc: (res) => {\n                if (res.data.errno == 0) {\n                  this.$message({\n                    type: \"success\",\n                    message: \"finish protocol success\",\n                  });\n                  this.refresh();\n                }\n                if (res.data.errno != 0) {\n                  this.$notify.error({\n                    title: \"error\",\n                    message:\n                      \"finish protocol failed--------\" + res.data.message,\n                  });\n                  hideLoading();\n                }\n                hideLoading();\n              },\n              errFunc: (err) => {\n                this.$notify.error({\n                  title: \"error\",\n                  message: err,\n                });\n                hideLoading();\n              },\n            };\n            request(opt);\n          })\n          .catch(() => {\n            this.$message({\n              type: \"info\",\n              message: \"Cancelled operation\",\n            });\n          });\n      } else if (type == \"Protocol\") {\n        this.$router.push({\n          path: \"/PersonalCenter/DemandList/ProtocolMessage\",\n          query: {\n            id: item.id,\n            type: \"Candidate\",\n          },\n        });\n      }\n    },\n\n    // 刷新\n    refresh() {\n      this.reload();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../DemandMarket/index.scss\";\n@import \"../../../Index.scss\";\n\n.protocol_list {\n  width: 100%;\n  height: calc(100vh - 120px);\n  overflow-y: scroll;\n\n  .all_candidate_content_a {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  p {\n    margin-bottom: 10px;\n    font-weight: 400 !important;\n  }\n\n  i {\n    margin-right: 8px;\n  }\n\n  .all_candidate_content_r_p {\n    display: flex;\n  }\n}\n</style>\n"]}]}