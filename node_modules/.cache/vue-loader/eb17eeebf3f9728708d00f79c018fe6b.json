{"remainingRequest":"/Users/admin/projects/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/projects/cybercrowdcoin-web/src/Index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/admin/projects/cybercrowdcoin-web/src/Index.vue","mtime":1699239139000},{"path":"/Users/admin/projects/cybercrowdcoin-web/node_modules/cache-loader/dist/cjs.js","mtime":1699331769630},{"path":"/Users/admin/projects/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js","mtime":1699331770008}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBXZWIzIGZyb20gIndlYjMiOwppbXBvcnQgeyBldGhlcnMgfSBmcm9tICJldGhlcnMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0NvbGxhcHNlOiBmYWxzZSwKICAgICAgYWNjb3VudDogbnVsbCwKICAgICAgdXNlck5hbWU6ICIiLAoKICAgICAgc3VibWVudUxpc3Q6IFsKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogIkhvbWUiLAogICAgICAgICAgcGF0aDogIi9Ib21lIiwKICAgICAgICAgIGljb246ICJpY29uLXNob3V5ZSIsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogIkRlbWFuZCBNYXJrZXQiLAogICAgICAgICAgcGF0aDogIi9EZW1hbmRNYXJrZXQvRGVtYW5kTGlzdCIsCiAgICAgICAgICBpY29uOiAiaWNvbi1nb25nenVvIiwKICAgICAgICAgIG1lbnVMaXN0OiBbCiAgICAgICAgICAgIHsgdGl0bGU6ICJBTEwgRGVtYW5kIExpc3QiLCBwYXRoOiAiL0RlbWFuZE1hcmtldC9EZW1hbmRMaXN0IiB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgdGl0bGU6ICJBTEwgQ2FuZGlkYXRlIExpc3QiLAogICAgICAgICAgICAgIHBhdGg6ICIvRGVtYW5kTWFya2V0L0NhbmRpZGF0ZUxpc3QiLAogICAgICAgICAgICB9LAogICAgICAgICAgXSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAiUGVyc29uYWwgQ2VudGVyIiwKICAgICAgICAgIHBhdGg6ICIvUGVyc29uYWxDZW50ZXIiLAogICAgICAgICAgaWNvbjogImljb24tZ2VyZW4iLAogICAgICAgICAgbWVudUxpc3Q6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIHRpdGxlOiAiRW1wbG95ZXIgRGVtYW5kIiwKICAgICAgICAgICAgICBwYXRoOiAiL1BlcnNvbmFsQ2VudGVyL0RlbWFuZE5ldyIsCiAgICAgICAgICAgICAgbGlzdDogWwogICAgICAgICAgICAgICAgeyB0aXRsZTogIkRlbWFuZCBOZXciLCBwYXRoOiAiL1BlcnNvbmFsQ2VudGVyL0RlbWFuZE5ldyIgfSwKICAgICAgICAgICAgICAgIHsgdGl0bGU6ICJEZW1hbmQgTGlzdCIsIHBhdGg6ICIvUGVyc29uYWxDZW50ZXIvRGVtYW5kTGlzdCIgfSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgdGl0bGU6ICJDYW5kaWRhdGUgUHJvdG9jb2wiLAogICAgICAgICAgICAgIHBhdGg6ICIvUGVyc29uYWxDZW50ZXIvUHJvdG9jb2xMaXN0IiwKICAgICAgICAgICAgICBsaXN0OiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAiUHJvdG9jb2wgTGlzdCIsCiAgICAgICAgICAgICAgICAgIHBhdGg6ICIvUGVyc29uYWxDZW50ZXIvUHJvdG9jb2xMaXN0IiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHRpdGxlOiAiQ2FuZGlkYXRlIFByb2ZpbGUiLAogICAgICAgICAgICAgIHBhdGg6ICIvUGVyc29uYWxDZW50ZXIvQ2FuZGlkYXRlUHJvZmlsZSIsCiAgICAgICAgICAgICAgbGlzdDogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICB0aXRsZTogIlJlZ2lzdGVyIiwKICAgICAgICAgICAgICAgICAgcGF0aDogIi9QZXJzb25hbENlbnRlci9DYW5kaWRhdGVQcm9maWxlIiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgfSwKICAgICAgICAgIF0sCiAgICAgICAgfSwKICAgICAgXSwKICAgIH07CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMudXNlck5hbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlck5hbWUiKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBnb0Nvbihjb25FKSB7CiAgICAgIGlmICh0aGlzLiRyb3V0ZS5wYXRoID09PSBjb25FKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGNvbkUpOwogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIGxvZ2luV2l0aE1ldGFNYXNrKCkgewogICAgICBpZiAodHlwZW9mIHdpbmRvdy5ldGhlcmV1bSAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgICBjb25zdCB3ZWIzID0gbmV3IFdlYjMod2luZG93LmV0aGVyZXVtKTsKICAgICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcih3aW5kb3cuZXRoZXJldW0pOwoKICAgICAgICB0cnkgewogICAgICAgICAgLy8g6K+35rGC55So5oi36LSm5oi35Zyw5Z2ACiAgICAgICAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5yZXF1ZXN0KHsKICAgICAgICAgICAgbWV0aG9kOiAiZXRoX3JlcXVlc3RBY2NvdW50cyIsCiAgICAgICAgICB9KTsKICAgICAgICAgIGNvbnN0IGFjY291bnQgPSBhY2NvdW50c1swXTsKICAgICAgICAgIC8vIOiOt+WPluS4juW9k+WJjeW4kOaIt+WFs+iBlOeahOetvuWQjeiAhQogICAgICAgICAgY29uc3Qgc2lnbmVyID0gcHJvdmlkZXIuZ2V0U2lnbmVyKCk7CiAgICAgICAgICAvLyDojrflj5bnrb7lkI3ogIXnmoTlnLDlnYDvvIjov5nlupTor6XkuI7kuIrpnaLojrflj5bnmoTotKbmiLflnLDlnYDnm7jlkIzvvIkKICAgICAgICAgIGNvbnN0IHNpZ25lckFkZHJlc3MgPSBhd2FpdCBzaWduZXIuZ2V0QWRkcmVzcygpOwogICAgICAgICAgY29uc29sZS5sb2coIlNpZ25lciBhZGRyZXNzOiIsIHNpZ25lckFkZHJlc3MpOwoKICAgICAgICAgIGNvbnNvbGUubG9nKCJDb25uZWN0ZWQgYWNjb3VudDoiLCBhY2NvdW50KTsKICAgICAgICAgIGxldCBub25jZSwgc2lnbjsKICAgICAgICAgIGF4aW9zCiAgICAgICAgICAgIC5nZXQoCiAgICAgICAgICAgICAgImh0dHA6Ly8zLjM4LjE5Ny4yMDY6ODA5MC9jY2MvdXNlci9ub25jZT9hZGRyZXNzPSIgKyBzaWduZXJBZGRyZXNzCiAgICAgICAgICAgICkKICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICAgIG5vbmNlID0gcmVzLmRhdGEuZGF0YS5ub25jZTsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKG5vbmNlKTsKICAgICAgICAgICAgICBjb25zdCBtc2dQYXJhbXMgPSB7CiAgICAgICAgICAgICAgICBkb21haW46IHsKICAgICAgICAgICAgICAgICAgY2hhaW5JZDogd2luZG93LmV0aGVyZXVtLmNoYWluSWQsCiAgICAgICAgICAgICAgICAgIG5hbWU6ICJMb2dpbiIsCiAgICAgICAgICAgICAgICAgIHZlcnNpb246ICIxIiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBtZXNzYWdlOiB7CiAgICAgICAgICAgICAgICAgIGNvbnRlbnRzOiAiTG9naW4iLAogICAgICAgICAgICAgICAgICBub25jZTogbm9uY2UsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgcHJpbWFyeVR5cGU6ICJMb2dpbiIsCiAgICAgICAgICAgICAgICB0eXBlczogewogICAgICAgICAgICAgICAgICBFSVA3MTJEb21haW46IFsKICAgICAgICAgICAgICAgICAgICB7IG5hbWU6ICJuYW1lIiwgdHlwZTogInN0cmluZyIgfSwKICAgICAgICAgICAgICAgICAgICB7IG5hbWU6ICJ2ZXJzaW9uIiwgdHlwZTogInN0cmluZyIgfSwKICAgICAgICAgICAgICAgICAgICB7IG5hbWU6ICJjaGFpbklkIiwgdHlwZTogInVpbnQyNTYiIH0sCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIExvZ2luOiBbCiAgICAgICAgICAgICAgICAgICAgeyBuYW1lOiAiY29udGVudHMiLCB0eXBlOiAic3RyaW5nIiB9LAogICAgICAgICAgICAgICAgICAgIHsgbmFtZTogIm5vbmNlIiwgdHlwZTogInVpbnQyNTYiIH0sCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgd2luZG93LmV0aGVyZXVtCiAgICAgICAgICAgICAgICAucmVxdWVzdCh7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogImV0aF9zaWduVHlwZWREYXRhX3Y0IiwKICAgICAgICAgICAgICAgICAgcGFyYW1zOiBbc2lnbmVyQWRkcmVzcywgSlNPTi5zdHJpbmdpZnkobXNnUGFyYW1zKV0sCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICAgICAgICBzaWduID0gcmVzOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgICAgYXhpb3MKICAgICAgICAgICAgICAgICAgICAucG9zdCgiaHR0cDovLzMuMzguMTk3LjIwNjo4MDkwL2NjYy91c2VyL3NpZ24tY2hlY2siLCB7CiAgICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiB3aW5kb3cuZXRoZXJldW0uY2hhaW5JZCwKICAgICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IHNpZ25lckFkZHJlc3MsCiAgICAgICAgICAgICAgICAgICAgICBzaWduYXR1cmU6IHNpZ24sCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgidG9rZW4iLCByZXMuZGF0YS5kYXRhLnRva2VuKTsKICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oImV4cGlyZSIsIERhdGUubm93KCkgKyAzNjAwMDAwKTsKICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInVzZXJOYW1lIiwgc2lnbmVyQWRkcmVzcyk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcygiTG9naW4gc3VjY2VzcyIpOwogICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIGFjY291bnQ6IHNpZ25lckFkZHJlc3MgfTsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIkxvZ2luIGZhaWxlZCIpOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSB9OwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCJVc2VyIHJlamVjdGVkIHJlcXVlc3Q6IiwgZXJyb3IpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBhbGVydCgi6K+35a6J6KOFTWV0YU1hc2vvvIEiKTsKICAgICAgfQogICAgfSwKICB9LAoKICBjb21wdXRlZDogewogICAgLy8g5Yqo5oCB6L+U5Zue5a+55bqU55qE6Lev55SxcGF0aAogICAgb25Sb3V0ZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXRoOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";AA2FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"ccc-index\">\n    <div class=\"head_logo\">\n      <div class=\"head_logo_l\">\n        <img src=\"./assets/logo.png\" alt=\"\" />\n        <p>CCC</p>\n      </div>\n      <div class=\"head_logo_r\">\n        <div\n          style=\"cursor: pointer; margin-right: 25px\"\n          @click=\"loginWithMetaMask\"\n        >\n          <i class=\"iconfont icon-wangluo\"></i>\n          <span>Connect Wallet</span>\n        </div>\n        <div>\n          <i class=\"icon-geren iconfont\"></i>\n          <span>{{ userName }}</span>\n        </div>\n      </div>\n    </div>\n    <el-container>\n      <el-aside width=\"18%\">\n        <el-menu :default-active=\"onRoutes\">\n          <div v-for=\"(item, index) in submenuList\" :key=\"index\">\n            <!-- 一级菜单（没有任何子级菜单）-->\n            <el-menu-item\n              @click=\"goCon(item.path)\"\n              :index=\"item.path\"\n              v-if=\"!item.menuList\"\n            >\n              <i :class=\"item.icon + ' iconfont'\"></i>\n              {{ item.title }}\n            </el-menu-item>\n\n            <!-- 一级菜单（有子级菜单）-->\n            <el-submenu :index=\"item.path\" v-else>\n              <template slot=\"title\"\n                ><i :class=\"item.icon + ' iconfont'\"></i\n                >{{ item.title }}</template\n              >\n\n              <!-- 遍历二级菜单容器 -->\n              <div v-for=\"(i, index) in item.menuList\" :key=\"index\">\n                <!-- 判断二级菜单（没有三级菜单）-->\n                <el-menu-item\n                  @click=\"goCon(i.path)\"\n                  :index=\"i.path\"\n                  v-if=\"!i.list\"\n                  style=\"font-size: 13px\"\n                >\n                  <i style=\"margin-right: 7px; font-weight: bold\"></i>\n                  {{ i.title }}</el-menu-item\n                >\n\n                <!-- 判断二级菜单（有三级菜单）-->\n                <el-submenu\n                  :index=\"i.path\"\n                  v-else\n                  style=\"padding-left: 15px !important\"\n                  class=\"two_have_three_menu\"\n                >\n                  <template slot=\"title\"\n                    ><span style=\"font-size: 13px\">{{\n                      i.title\n                    }}</span></template\n                  >\n                  <el-menu-item\n                    :index=\"j.path\"\n                    v-for=\"(j, index) in i.list\"\n                    :key=\"index\"\n                    @click=\"goCon(j.path)\"\n                    style=\"padding-left: 27px\"\n                  >\n                    {{ j.title }}\n                  </el-menu-item>\n                </el-submenu>\n              </div>\n            </el-submenu>\n          </div>\n        </el-menu>\n      </el-aside>\n\n      <el-container class=\"el-container123\" style=\"padding: 0 20px\" width=\"70%\">\n        <router-view name=\"main\" />\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      isCollapse: false,\n      account: null,\n      userName: \"\",\n\n      submenuList: [\n        {\n          title: \"Home\",\n          path: \"/Home\",\n          icon: \"icon-shouye\",\n        },\n        {\n          title: \"Demand Market\",\n          path: \"/DemandMarket/DemandList\",\n          icon: \"icon-gongzuo\",\n          menuList: [\n            { title: \"ALL Demand List\", path: \"/DemandMarket/DemandList\" },\n            {\n              title: \"ALL Candidate List\",\n              path: \"/DemandMarket/CandidateList\",\n            },\n          ],\n        },\n        {\n          title: \"Personal Center\",\n          path: \"/PersonalCenter\",\n          icon: \"icon-geren\",\n          menuList: [\n            {\n              title: \"Employer Demand\",\n              path: \"/PersonalCenter/DemandNew\",\n              list: [\n                { title: \"Demand New\", path: \"/PersonalCenter/DemandNew\" },\n                { title: \"Demand List\", path: \"/PersonalCenter/DemandList\" },\n              ],\n            },\n            {\n              title: \"Candidate Protocol\",\n              path: \"/PersonalCenter/ProtocolList\",\n              list: [\n                {\n                  title: \"Protocol List\",\n                  path: \"/PersonalCenter/ProtocolList\",\n                },\n              ],\n            },\n            {\n              title: \"Candidate Profile\",\n              path: \"/PersonalCenter/CandidateProfile\",\n              list: [\n                {\n                  title: \"Register\",\n                  path: \"/PersonalCenter/CandidateProfile\",\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  },\n\n  mounted() {\n    this.userName = localStorage.getItem(\"userName\");\n  },\n\n  methods: {\n    goCon(conE) {\n      if (this.$route.path === conE) {\n        return;\n      } else {\n        this.$router.push(conE);\n      }\n    },\n\n    async loginWithMetaMask() {\n      if (typeof window.ethereum !== \"undefined\") {\n        const web3 = new Web3(window.ethereum);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n        try {\n          // 请求用户账户地址\n          const accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\",\n          });\n          const account = accounts[0];\n          // 获取与当前帐户关联的签名者\n          const signer = provider.getSigner();\n          // 获取签名者的地址（这应该与上面获取的账户地址相同）\n          const signerAddress = await signer.getAddress();\n          console.log(\"Signer address:\", signerAddress);\n\n          console.log(\"Connected account:\", account);\n          let nonce, sign;\n          axios\n            .get(\n              \"http://3.38.197.206:8090/ccc/user/nonce?address=\" + signerAddress\n            )\n            .then((res) => {\n              nonce = res.data.data.nonce;\n            })\n            .then(() => {\n              console.log(nonce);\n              const msgParams = {\n                domain: {\n                  chainId: window.ethereum.chainId,\n                  name: \"Login\",\n                  version: \"1\",\n                },\n                message: {\n                  contents: \"Login\",\n                  nonce: nonce,\n                },\n                primaryType: \"Login\",\n                types: {\n                  EIP712Domain: [\n                    { name: \"name\", type: \"string\" },\n                    { name: \"version\", type: \"string\" },\n                    { name: \"chainId\", type: \"uint256\" },\n                  ],\n                  Login: [\n                    { name: \"contents\", type: \"string\" },\n                    { name: \"nonce\", type: \"uint256\" },\n                  ],\n                },\n              };\n              window.ethereum\n                .request({\n                  method: \"eth_signTypedData_v4\",\n                  params: [signerAddress, JSON.stringify(msgParams)],\n                })\n                .then((res) => {\n                  sign = res;\n                  console.log(res);\n                })\n                .then(() => {\n                  axios\n                    .post(\"http://3.38.197.206:8090/ccc/user/sign-check\", {\n                      chainId: window.ethereum.chainId,\n                      address: signerAddress,\n                      signature: sign,\n                    })\n                    .then((res) => {\n                      if (res.data.success) {\n                        localStorage.setItem(\"token\", res.data.data.token);\n                        localStorage.setItem(\"expire\", Date.now() + 3600000);\n                        localStorage.setItem(\"userName\", signerAddress);\n                        this.$message.success(\"Login success\");\n                        window.location.reload();\n                        return { success: true, account: signerAddress };\n                      } else {\n                        this.$message.error(\"Login failed\");\n                        return { success: false };\n                      }\n                    });\n                });\n            });\n        } catch (error) {\n          console.error(\"User rejected request:\", error);\n        }\n      } else {\n        alert(\"请安装MetaMask！\");\n      }\n    },\n  },\n\n  computed: {\n    // 动态返回对应的路由path\n    onRoutes() {\n      return this.$route.path;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"./Index.scss\";\n* {\n  font-weight: 400;\n}\n</style>\n"]}]}