{"remainingRequest":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/src/views/PersonalCenter/EmployerDemand/DemandList.vue?vue&type=style&index=0&id=1b2565b2&lang=scss&scoped=true","dependencies":[{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/src/views/PersonalCenter/EmployerDemand/DemandList.vue","mtime":1699945802000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/projects/cybercrowdcoin/cybercrowdcoin-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uL0RlbWFuZE1hcmtldC9pbmRleC5zY3NzIjsKQGltcG9ydCAiLi4vLi4vLi4vSW5kZXguc2NzcyI7CgouZGVtYW5kX2xpc3QgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogY2FsYygxMDB2aCAtIDEyMHB4KTsKICBvdmVyZmxvdy15OiBzY3JvbGw7CgogIC5kZW1hbmRfcHJvdG9jb2xzX2xpc3QgewogICAgZGl2IHsKICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsKICAgIH0KICB9Cn0KL2RlZXAvIC5lbC1kaWFsb2cgewogIC5lbC1kaWFsb2dfX2JvZHkgewogICAgcGFkZGluZzogNXB4IDIwcHggMjBweCAhaW1wb3J0YW50OwogIH0KfQo="},{"version":3,"sources":["DemandList.vue"],"names":[],"mappings":";AAwqBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DemandList.vue","sourceRoot":"src/views/PersonalCenter/EmployerDemand","sourcesContent":["<template>\n  <div class=\"demand_list\">\n    <div class=\"search\">\n      <el-input v-model=\"search.title\" placeholder=\"Search By Title\"></el-input>\n      <el-select v-model=\"search.status\" placeholder=\"Search By Status\">\n        <el-option\n          v-for=\"item in search.optionsStatus\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n\n      <el-cascader\n        v-model=\"search.category\"\n        :options=\"search.optionsCategory\"\n        placeholder=\"Search By Category\"\n      ></el-cascader>\n      <el-button type=\"info\" @click=\"handleSearch\">Search</el-button>\n      <el-button type=\"success\" @click=\"handleReset\">Reset</el-button>\n    </div>\n    <div v-if=\"demandList.length > 0\">\n      <div class=\"all_demand_content\" v-for=\"(item, i) in demandList\" :key=\"i\">\n        <div class=\"all_demand_content_l\">\n          <p style=\"font-size: 26px\">{{ item.title }}</p>\n          <div class=\"all_demand_content_l_tag\">\n            <div\n              v-if=\"item.status == 'open'\"\n              class=\"all_demand_content_l_tag-s1\"\n            >\n              Open\n            </div>\n            <div\n              v-else-if=\"item.status == 'completed'\"\n              class=\"all_demand_content_l_tag-s2\"\n            >\n              Completed\n            </div>\n            <div\n              v-else-if=\"item.status == 'ongoing'\"\n              class=\"all_demand_content_l_tag-s4\"\n            >\n              Ongoing\n            </div>\n            <div class=\"all_demand_content_l_tag-s3\">{{ item.category }}</div>\n          </div>\n\n          <p class=\"all_demand_content_l_desc\">\n            <i class=\"iconfont icon-describe\"></i> Description：{{\n              item.description\n            }}\n          </p>\n          <div>\n            <a :href=\"'https://twitter.com/' + item.twitter\" target=\"_blank\"\n              ><i class=\"iconfont icon-birdxiaoniao bird_icon\"></i\n            ></a>\n            <a :href=\"'https://t.me/' + item.telegram\" target=\"_blank\"\n              ><i class=\"iconfont icon-telegram-plane bird_icon\"></i\n            ></a>\n          </div>\n        </div>\n        <div class=\"all_demand_content_r\">\n          <div>\n            <p style=\"font-size: 20px\">${{ item.budget || 0 }}</p>\n            <p style=\"font-size: 14px; font-weight: 400\">\n              Token Deposit：{{ item.tokenAmount || 0 }}\n            </p>\n            <div style=\"display: flex; flex-direction: row\">\n              <el-button\n                type=\"info\"\n                @click=\"handleEnd(item)\"\n                :disabled=\"item.status == 'completed'\"\n                style=\"margin-right: 10px\"\n                >End</el-button\n              >\n              <el-button type=\"info\" @click=\"handleProtocols(item)\"\n                >Protocols</el-button\n              >\n            </div>\n          </div>\n          <div>\n            <p style=\"font-size: 14px\">Contract：{{ item.contract }}</p>\n            <p style=\"font-size: 14px\">Creator：{{ item.creator }}</p>\n          </div>\n        </div>\n\n        <el-dialog :visible.sync=\"dialogVisibleEnd\" width=\"30%\">\n          <div slot=\"title\" class=\"dialog_skills_title\">\n            <i class=\"iconfont icon-tuichudenglu\"></i>\n            <span>End Demand</span>\n          </div>\n          <p>\n            Are you sure you want to end the operation and return the deposit\n          </p>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogVisibleEnd = false\" type=\"success\"\n              >Cancel</el-button\n            >\n            <el-button\n              type=\"info\"\n              @click=\"handleEndSubmit\"\n              style=\"margin-left: 10px\"\n              >OK</el-button\n            >\n          </div>\n        </el-dialog>\n\n        <el-dialog :visible.sync=\"dialogVisibleProtocols\" width=\"30%\">\n          <div slot=\"title\" class=\"dialog_skills_title\">\n            <span>Protocols</span>\n          </div>\n          <div>\n            <div v-if=\"ProtocolsListDialog.length == 0\" class=\"nodata\">\n              <img src=\"@/assets/暂无数据.png\" alt=\"\" />\n              <p>No Datas</p>\n            </div>\n            <div v-else>\n              <div v-for=\"item in ProtocolsListDialog\" :key=\"item.id\">\n                <div class=\"demand_protocols_list\">\n                  <div>Demand ID：{{ item.id }}</div>\n                  <div>contract：{{ item.contract }}</div>\n                  <div>candidate：{{ item.candidate }}</div>\n                  <div class=\"demand_protocols_list_status\">\n                    <i class=\"el-icon-info\" style=\"color: #8b8b8b\"></i>\n                    <span style=\"font-weight: 400; margin-left: 0\">{{\n                      item.status\n                    }}</span>\n                  </div>\n                  <div>activeDate：{{ item.activeDate }}</div>\n\n                  <div class=\"demand_protocols_btn\">\n                    <div v-if=\"item.status == 'invite pending'\">\n                      <el-button\n                        type=\"info\"\n                        @click=\"handleClick(item, 'Cancel')\"\n                        >Cancel</el-button\n                      >\n                      <el-button\n                        type=\"success\"\n                        @click=\"handleClick(item, 'Protocol')\"\n                        >Protocol Message</el-button\n                      >\n                    </div>\n                    <div v-else-if=\"item.status == 'proposal pending'\">\n                      <el-button\n                        type=\"info\"\n                        @click=\"handleClick(item, 'Accept')\"\n                        >Accept</el-button\n                      >\n                      <el-button\n                        type=\"info\"\n                        @click=\"handleClick(item, 'Refuse')\"\n                        >Refuse</el-button\n                      >\n                      <el-button\n                        type=\"success\"\n                        @click=\"handleClick(item, 'Protocol')\"\n                        >Protocol Message</el-button\n                      >\n                    </div>\n                    <div v-else>\n                      <el-button\n                        type=\"success\"\n                        @click=\"handleClick(item, 'Protocol')\"\n                        >Protocol Message</el-button\n                      >\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <Pagination\n                v-show=\"pageLengthPro >= 0\"\n                :limit.sync=\"pageSizePro\"\n                :total=\"pageLengthPro\"\n                @pagination=\"handlePageChangeProtocols\"\n                :page-sizes=\"pageSizesPro\"\n              />\n            </div>\n          </div>\n        </el-dialog>\n      </div>\n\n      <Pagination\n        v-show=\"pageLength >= 0\"\n        :limit.sync=\"pageSize\"\n        :total=\"pageLength\"\n        @pagination=\"handlePageChange\"\n        :page-sizes=\"pageSizes\"\n      />\n    </div>\n    <div class=\"nodata\" v-else>\n      <img src=\"@/assets/暂无数据.png\" alt=\"\" />\n      <p>No Datas</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reqUrl } from \"@/api/apiUrl\";\nimport { requestGet, request } from \"@/api/request\";\nimport {\n  demandDetail,\n  endDemandContract,\n  addCandidateContract,\n} from \"@/service/demand_service\";\n\nimport { CategoryData } from \"@/data/category.js\";\nimport { format_time_date } from \"@/util/universalMethod.js\";\nimport Pagination from \"@/component/Pagination\";\n\nimport { showLoading, hideLoading } from \"@/util/loading\";\nexport default {\n  components: {\n    Pagination,\n  },\n  inject: [\"reload\"],\n\n  data() {\n    return {\n      demandList: [],\n\n      search: {\n        optionsStatus: [\n          {\n            value: \"Open\",\n            label: \"Open\",\n          },\n          {\n            value: \"Completed\",\n            label: \"Completed\",\n          },\n          {\n            value: \"Ongoing\",\n            label: \"Ongoing\",\n          },\n        ],\n\n        title: \"\",\n        status: \"\",\n        category: \"\",\n\n        optionsCategory: [],\n      },\n\n      dialogVisibleEnd: false,\n      dialogVisibleProtocols: false,\n      ProtocolsListDialog: [],\n      endContract: \"\",\n\n      // 分页数据\n      currentPage: 1,\n      pageLength: 0,\n      pageSize: 10, //要传过去的数据 每页多少条数据\n      pageSizes: [10, 20, 50, 100, 200],\n      currentPagePro: 1,\n      pageLengthPro: 0,\n      pageSizePro: 10, //要传过去的数据 每页多少条数据\n      pageSizesPro: [10, 20, 50, 100, 200],\n    };\n  },\n\n  mounted() {\n    this.search.optionsCategory = CategoryData;\n\n    showLoading();\n    const opt = {\n      url: reqUrl.employerDemandList,\n\n      resFunc: (res) => {\n        console.log(res.data);\n        if (res.data.errno == 0) {\n          this.demandList = res.data.data.list;\n          this.pageLength = res.data.data.total;\n        }\n        if (res.data.errno != 0) {\n          this.$notify.error({\n            title: \"错误\",\n            message: res.data.message,\n          });\n          hideLoading();\n        }\n        hideLoading();\n      },\n      errFunc: (err) => {\n        this.$notify.error({\n          title: \"错误\",\n          message: err,\n        });\n        console.log(err, \"err1\");\n        hideLoading();\n      },\n    };\n    requestGet(opt);\n  },\n\n  methods: {\n    handleSearch() {\n      showLoading();\n      const opt = {\n        url: reqUrl.employerDemandList,\n        params: {\n          title: this.search.title,\n          status: this.search.status,\n          contract: this.search.category[this.search.category.length - 1],\n        },\n        resFunc: (res) => {\n          console.log(res.data);\n          if (res.data.errno == 0) {\n            this.demandList = res.data.data.list;\n            this.pageLength = res.data.data.total;\n          }\n          if (res.data.errno != 0) {\n            this.$notify.error({\n              title: \"错误\",\n              message: res.data.message,\n            });\n            hideLoading();\n          }\n          hideLoading();\n        },\n        errFunc: (err) => {\n          this.$notify.error({\n            title: \"错误\",\n            message: err,\n          });\n          console.log(err, \"err1\");\n          hideLoading();\n        },\n      };\n      requestGet(opt);\n    },\n\n    handleReset() {\n      this.refresh();\n    },\n\n    handleEnd(item) {\n      this.dialogVisibleEnd = true;\n      this.endContract = item.contract;\n    },\n\n    handleEndSubmit() {\n      showLoading();\n      const opt = {\n        url: reqUrl.endDemandCheck,\n        params: {\n          contract: this.endContract,\n        },\n        resFunc: async (res) => {\n          if (res.data.errno == 0) {\n            try {\n              const demand = await demandDetail(this.endContract);\n\n              await endDemandContract(this.endContract, demand.tokenAmount);\n              window.location.reload();\n            } catch (error) {}\n          }\n          if (res.data.errno != 0) {\n            this.$notify.error({\n              title: \"error\",\n              message: res.data.message,\n            });\n            hideLoading();\n          }\n          hideLoading();\n        },\n        errFunc: (err) => {\n          this.$notify.error({\n            title: \"error\",\n            message: err,\n          });\n          console.log(err, \"err1\");\n          hideLoading();\n        },\n      };\n      requestGet(opt);\n    },\n\n    handleProtocols(item) {\n      this.dialogVisibleProtocols = true;\n      showLoading();\n      const opt = {\n        url: reqUrl.listByDemandProtocol,\n        params: {\n          contract: item.contract,\n        },\n        resFunc: (res) => {\n          if (res.data.errno == 0) {\n            this.ProtocolsListDialog = res.data.data.list;\n            this.pageLengthPro = res.data.data.total;\n            res.data.data.list.map((item) => {\n              if (item.activeDate != null) {\n                item.activeDate = format_time_date(item.activeDate);\n              }\n            });\n          }\n          if (res.data.errno != 0) {\n            this.$notify.error({\n              title: \"error\",\n              message: res.data.message,\n            });\n            hideLoading();\n          }\n          hideLoading();\n        },\n        errFunc: (err) => {\n          this.$notify.error({\n            title: \"error\",\n            message: err,\n          });\n          console.log(err, \"err1\");\n          hideLoading();\n        },\n      };\n      requestGet(opt);\n    },\n\n    handlePageChange(data) {\n      showLoading();\n      const opt = {\n        url: reqUrl.employerDemandList,\n        params: {\n          title: this.title,\n          status: this.status,\n          contract: this.type,\n          page: data.pageIndex,\n          pageSize: data.pageSize,\n        },\n        resFunc: (res) => {\n          console.log(res.data);\n          if (res.data.errno == 0) {\n            this.demandList = res.data.data.list;\n            this.pageLength = res.data.data.total;\n            this.pageSize = data.pageSize;\n            this.currentPage = data.pageIndex;\n          }\n          if (res.data.errno != 0) {\n            this.$notify.error({\n              title: \"错误\",\n              message: res.data.message,\n            });\n            hideLoading();\n          }\n          hideLoading();\n        },\n        errFunc: (err) => {\n          this.$notify.error({\n            title: \"错误\",\n            message: err,\n          });\n          console.log(err, \"err1\");\n          hideLoading();\n        },\n      };\n      requestGet(opt);\n    },\n\n    handlePageChangeProtocols(data) {\n      showLoading();\n      const opt = {\n        url: reqUrl.listByDemandProtocol,\n        params: {\n          contract: item.contract,\n          page: data.pageIndex,\n          pageSize: data.pageSize,\n        },\n        resFunc: (res) => {\n          if (res.data.errno == 0) {\n            this.ProtocolsListDialog = res.data.data.list;\n            this.pageLengthPro = res.data.data.total;\n            this.pageSizePro = data.pageSize;\n            this.currentPagePro = data.pageIndex;\n            res.data.data.list.map((item) => {\n              if (item.activeDate != null) {\n                item.activeDate = format_time_date(item.activeDate);\n              }\n            });\n          }\n          if (res.data.errno != 0) {\n            this.$notify.error({\n              title: \"error\",\n              message: res.data.message,\n            });\n            hideLoading();\n          }\n          hideLoading();\n        },\n        errFunc: (err) => {\n          this.$notify.error({\n            title: \"error\",\n            message: err,\n          });\n          console.log(err, \"err1\");\n          hideLoading();\n        },\n      };\n      requestGet(opt);\n    },\n\n    handleClick(item, type) {\n      if (type == \"Cancel\") {\n        this.$confirm(\n          \"Are you sure you want to cancel the invitation?\",\n          \"Tips\",\n          {\n            confirmButtonText: \"Confirm\",\n            cancelButtonText: \"Cancel\",\n            type: \"warning\",\n          }\n        )\n          .then(() => {\n            showLoading();\n            const opt = {\n              url: reqUrl.cancelInvitationProtocol,\n              method: \"POST\",\n              params: {\n                protocolId: item.id,\n              },\n              resFunc: (res) => {\n                if (res.data.errno == 0) {\n                  this.$message({\n                    type: \"success\",\n                    message: \"cancel invitation success\",\n                  });\n                  this.refresh();\n                }\n                if (res.data.errno != 0) {\n                  this.$notify.error({\n                    title: \"error\",\n                    message:\n                      \"cancel invitation failed--------\" + res.data.message,\n                  });\n                  hideLoading();\n                }\n                hideLoading();\n              },\n              errFunc: (err) => {\n                this.$notify.error({\n                  title: \"error\",\n                  message: err,\n                });\n                hideLoading();\n              },\n            };\n            request(opt);\n          })\n          .catch(() => {\n            this.$message({\n              type: \"info\",\n              message: \"Cancelled operation\",\n            });\n          });\n      } else if (type == \"Accept\") {\n        this.$confirm(\n          \"Are you sure you want to accept the invitation?\",\n          \"Tips\",\n          {\n            confirmButtonText: \"Confirm\",\n            cancelButtonText: \"Cancel\",\n            type: \"warning\",\n          }\n        )\n          .then(() => {\n            showLoading();\n            const opt = {\n              url: reqUrl.acceptProtocol,\n              method: \"POST\",\n              params: {\n                protocolId: item.id,\n              },\n              resFunc: async (res) => {\n                if (res.data.errno == 0) {\n                  this.$message({\n                    type: \"success\",\n                    message: \"accept proposal success\",\n                  });\n                  if (res.data.data.url) {\n                    await addCandidateContract(item.id, res.data.data.url);\n                    this.refresh();\n                  }\n                }\n                if (res.data.errno != 0) {\n                  this.$notify.error({\n                    title: \"error\",\n                    message:\n                      \"accept proposal failed--------\" + res.data.message,\n                  });\n                  hideLoading();\n                }\n                hideLoading();\n              },\n              errFunc: (err) => {\n                this.$notify.error({\n                  title: \"error\",\n                  message: err,\n                });\n                hideLoading();\n              },\n            };\n            request(opt);\n          })\n          .catch(() => {\n            this.$message({\n              type: \"info\",\n              message: \"Cancelled operation\",\n            });\n          });\n      } else if (type == \"Refuse\") {\n        this.$confirm(\n          \"Are you sure you want to refuse the invitation?\",\n          \"Tips\",\n          {\n            confirmButtonText: \"Confirm\",\n            cancelButtonText: \"Cancel\",\n            type: \"warning\",\n          }\n        )\n          .then(() => {\n            showLoading();\n            const opt = {\n              url: reqUrl.refuseProtocol,\n              method: \"POST\",\n              params: {\n                protocolId: item.id,\n              },\n              resFunc: (res) => {\n                if (res.data.errno == 0) {\n                  this.$message({\n                    type: \"success\",\n                    message: \"refuse proposal success\",\n                  });\n                  this.refresh();\n                }\n                if (res.data.errno != 0) {\n                  this.$notify.error({\n                    title: \"error\",\n                    message:\n                      \"refuse proposal failed--------\" + res.data.message,\n                  });\n                  hideLoading();\n                }\n                hideLoading();\n              },\n              errFunc: (err) => {\n                this.$notify.error({\n                  title: \"error\",\n                  message: err,\n                });\n                hideLoading();\n              },\n            };\n            request(opt);\n          })\n          .catch(() => {\n            this.$message({\n              type: \"info\",\n              message: \"Cancelled operation\",\n            });\n          });\n      } else if (type == \"Protocol\") {\n        this.$router.push({\n          path: \"/PersonalCenter/DemandList/ProtocolMessage\",\n          query: {\n            id: item.id,\n            type: \"Demand\",\n          },\n        });\n      }\n    },\n\n    // 刷新\n    refresh() {\n      this.reload();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../DemandMarket/index.scss\";\n@import \"../../../Index.scss\";\n\n.demand_list {\n  width: 100%;\n  height: calc(100vh - 120px);\n  overflow-y: scroll;\n\n  .demand_protocols_list {\n    div {\n      margin-bottom: 10px;\n    }\n  }\n}\n/deep/ .el-dialog {\n  .el-dialog__body {\n    padding: 5px 20px 20px !important;\n  }\n}\n</style>\n"]}]}